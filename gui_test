from openpyxl import *
from openpyxl.utils import *
import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QTableWidget, QTableWidgetItem

class ExcelReader(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def are_cells_merged(self, worksheet, cell1_coord, cell2_coord):
        min_row1, min_col1, max_row1, max_col1 = range_boundaries(cell1_coord)
        min_row2, min_col2, max_row2, max_col2 = range_boundaries(cell2_coord)

        for merged_range in worksheet.merged_cells.ranges:
            merged_min_row, merged_min_col, merged_max_row, merged_max_col = merged_range.bounds
            if (min_row1 >= merged_min_row and max_row1 <= merged_max_row and
                    min_col1 >= merged_min_col and max_col1 <= merged_max_col and
                    min_row2 >= merged_min_row and max_row2 <= merged_max_row and
                    min_col2 >= merged_min_col and max_col2 <= merged_max_col):
                return True
        return False

    def initUI(self):
        self.setWindowTitle('Excel Data Viewer')
        self.setGeometry(100, 100, 600, 400)

        self.output_table = QTableWidget()
        self.output_table.setColumnCount(1)
        self.output_table.horizontalHeader().setVisible(False)
        self.output_table.verticalHeader().setVisible(False)

        layout = QVBoxLayout()
        layout.addWidget(self.output_table)
        self.setLayout(layout)

        self.load_and_display_excel_data('test.xlsx')

    def load_and_display_excel_data(self, filename):
        wb = load_workbook(filename)
        ws = wb["Лист1"]
        test = ws['c4']
        week = 1

        days = ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"]
        row_index = 0

        for i in range(4, 76):
            if (i % 12 == 4):  # Start of a new day
                day_index = (i // 12) - 1
                self.output_table.insertRow(row_index)
                item = QTableWidgetItem(days[day_index])
                self.output_table.setItem(row_index, 0, item)
                row_index += 1

            if (i % 2 == 0):
                time = ws['b' + str(i)].value
                item = QTableWidgetItem(str(time))
                self.output_table.insertRow(row_index)
                self.output_table.setItem(row_index, 0, item)
                row_index += 1

            name = ws['c' + str(i)].value
            if (i % 2 == week and name is not None):
                item = QTableWidgetItem(str(name))
                self.output_table.insertRow(row_index)
                self.output_table.setItem(row_index, 0, item)
                row_index += 1
            elif (self.are_cells_merged(ws, 'c' + str(i), 'c' + str(i + 1)) and name is not None):
                item = QTableWidgetItem(str(name))
                self.output_table.insertRow(row_index)
                self.output_table.setItem(row_index, 0, item)
                row_index += 1
            elif (i % 2 == week):
                item = QTableWidgetItem("-")
                self.output_table.insertRow(row_index)
                self.output_table.setItem(row_index, 0, item)
                row_index += 1

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = ExcelReader()
    ex.show()
    sys.exit(app.exec_())
